name: Build and Publish Release

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [self-hosted, ubuntu-latest]
        architecture: [arm64, amd64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.16.0

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: XindongG/Monorepo
          token: ${{ secrets.MY_PAT }}
          ssh-strict: true

      - name: Change ownership of .npm folder (macOS only)
        if: matrix.os == 'self-hosted'
        run: sudo chown -R 501:20 "/Users/xindong/.npm"

      - name: Build binary file
        run: |
          cd "${{ github.workspace }}/Backend" && npm install
          if [ "${{ matrix.architecture }}" = "arm64" ]; then
            npm run build:pkg
          else
            npm run build:pkg:amd64
          fi

      - name: Compress binary file
        run: tar -czvf "${{ github.workspace }}/Backend/binary/${{ matrix.architecture }}_binary.tar.gz" -C "${{ github.workspace }}/Backend/binary/" ${{ matrix.architecture }}_binary

      - name: Get the date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%Y.%m.%d')"
          echo "::set-output name=tag::release-$(date +'%Y%m%d%H%M%S')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          tag_name: ${{ steps.date.outputs.tag }}
          release_name: Release ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ github.workspace }}/Backend/binary/${{ matrix.architecture }}_binary.tar.gz"
          asset_name: ${{ matrix.os }}_${{ matrix.architecture }}_binary.tar.gz
          asset_content_type: application/gzip
